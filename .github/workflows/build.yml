name: Build
on:
  push:
    branches-ignore:
      - "no-ci-**"
      - "skip-ci-**"
  pull_request: {}

env:
  # common settings
  URHO3D_ENABLE_ALL: ON
  URHO3D_SAMPLES: ON
  # ccache configuration
  ccache_prefix: ${{ secrets.CACHE_VERSION }}-master
  CCACHE_DIR: ${{ github.workspace }}/.ccache
  CCACHE_COMPRESS: true
  CCACHE_COMPRESSLEVEL: 9
  # clcache configuration
  CLCACHE_DIR: ${{ github.workspace }}/.ccache # Intentionally same as CCACHE_DIR
  CLCACHE_COMPRESS: true
  CLACHE_COMPRESSLEVEL: 9
  # paths
  ci_source_dir: ${{ github.workspace }}/source-code
  ci_build_script: ./source-code/script/ci_build.sh
  ci_build_dir: ${{ github.workspace }}/cmake-build
  ci_sdk_dir: ${{ github.workspace }}/SDK

jobs:
  CheckSkipCI:
    runs-on: ubuntu-latest
    if: |
      !contains(github.event.head_commit.message, '[skip ci]') &&
      !contains(github.event.pull_request.title, '[skip ci]') &&
      !contains(github.event.head_commit.message, '[skip-ci]') &&
      !contains(github.event.pull_request.title, '[skip-ci]')
    steps:
      - run: exit 0

  Release:
    name: Create release
    runs-on: ubuntu-latest
    needs: [Windows]
    steps:
      - name: Download x86 release files
        uses: actions/download-artifact@v2
        with:
          name: "rbfx-Windows-x86-rel-${{ github.sha }}"
      - name: List .exe files
        shell: bash
        run: "find | grep .exe$"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: preview-${{ github.sha }}
          release_name: Preview release ${{ github.ref }}
          draft: false
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/Release/Editor.exe
          asset_name: Editor.exe
          asset_content_type: application/vnd.microsoft.portable-executable

  Windows:
    runs-on: windows-latest
    needs: [CheckSkipCI]

    strategy:
      fail-fast: false
      matrix:
        ci_arch:
          #- x64
          - x86
        ci_lib_type:
          - dll
          #- lib
        ci_build_type:
          #- dbg
          - rel
        ci_compiler:
          - msvc
          #- mingw
        #exclude:
        #  - { ci_build_type: dbg, ci_compiler: mingw } # MinGW debugging info is so bug build worker runs out of disk space.

    env:
      ci_platform: windows
      ci_arch: ${{ matrix.ci_arch }}
      ci_lib_type: ${{ matrix.ci_lib_type }}
      ci_build_type: ${{ matrix.ci_build_type }}
      ci_compiler: ${{ matrix.ci_compiler }}

    steps:
      - uses: actions/checkout@v2
        with:
          path: ${{ env.ci_source_dir }}
          fetch-depth: 1

      - name: Build Cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ${{ env.ccache_prefix }}-${{ github.job }}-${{ matrix.ci_arch }}-${{ matrix.ci_lib_type }}-${{ matrix.ci_build_type }}-${{ matrix.ci_compiler }}-${{ hashFiles('**/source-code/Source/**') }}
          restore-keys: |
            ${{ env.ccache_prefix }}-${{ github.job }}-${{ matrix.ci_arch }}-${{ matrix.ci_lib_type }}-${{ matrix.ci_build_type }}-${{ matrix.ci_compiler }}

      - name: Dependencies
        shell: bash
        run: ${{ env.ci_build_script }} dependencies

      - name: Generate
        shell: bash
        run: ${{ env.ci_build_script }} generate

      - name: NuGet Restore
        if: matrix.ci_lib_type == 'dll'
        shell: bash
        run: ${{ env.ci_build_script }} restore

      - name: Build
        shell: bash
        run: ${{ env.ci_build_script }} build-${{ env.ci_compiler }}

      - name: Install
        shell: bash
        run: ${{ env.ci_build_script }} install

      - uses: actions/upload-artifact@v2
        if: github.ref == 'refs/heads/master' && matrix.ci_build_type == 'rel'
        with:
          name: "rbfx-${{ github.job }}-${{ matrix.ci_arch }}-${{ matrix.ci_build_type }}-${{ github.sha }}"
          path: ${{ env.ci_sdk_dir }}
